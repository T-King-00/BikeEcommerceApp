//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace project1.ServiceReference2 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Bike", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class Bike : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string brandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string colorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string picurlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string priceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string typeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string brand {
            get {
                return this.brandField;
            }
            set {
                if ((object.ReferenceEquals(this.brandField, value) != true)) {
                    this.brandField = value;
                    this.RaisePropertyChanged("brand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string color {
            get {
                return this.colorField;
            }
            set {
                if ((object.ReferenceEquals(this.colorField, value) != true)) {
                    this.colorField = value;
                    this.RaisePropertyChanged("color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string picurl {
            get {
                return this.picurlField;
            }
            set {
                if ((object.ReferenceEquals(this.picurlField, value) != true)) {
                    this.picurlField = value;
                    this.RaisePropertyChanged("picurl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string price {
            get {
                return this.priceField;
            }
            set {
                if ((object.ReferenceEquals(this.priceField, value) != true)) {
                    this.priceField = value;
                    this.RaisePropertyChanged("price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string size {
            get {
                return this.sizeField;
            }
            set {
                if ((object.ReferenceEquals(this.sizeField, value) != true)) {
                    this.sizeField = value;
                    this.RaisePropertyChanged("size");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                if ((object.ReferenceEquals(this.typeField, value) != true)) {
                    this.typeField = value;
                    this.RaisePropertyChanged("type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Part", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class Part : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string brandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string colorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string picurlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string priceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string typeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string brand {
            get {
                return this.brandField;
            }
            set {
                if ((object.ReferenceEquals(this.brandField, value) != true)) {
                    this.brandField = value;
                    this.RaisePropertyChanged("brand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string color {
            get {
                return this.colorField;
            }
            set {
                if ((object.ReferenceEquals(this.colorField, value) != true)) {
                    this.colorField = value;
                    this.RaisePropertyChanged("color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string picurl {
            get {
                return this.picurlField;
            }
            set {
                if ((object.ReferenceEquals(this.picurlField, value) != true)) {
                    this.picurlField = value;
                    this.RaisePropertyChanged("picurl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string price {
            get {
                return this.priceField;
            }
            set {
                if ((object.ReferenceEquals(this.priceField, value) != true)) {
                    this.priceField = value;
                    this.RaisePropertyChanged("price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string size {
            get {
                return this.sizeField;
            }
            set {
                if ((object.ReferenceEquals(this.sizeField, value) != true)) {
                    this.sizeField = value;
                    this.RaisePropertyChanged("size");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                if ((object.ReferenceEquals(this.typeField, value) != true)) {
                    this.typeField = value;
                    this.RaisePropertyChanged("type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemsReview", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class ItemsReview : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dateofReviewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid itemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ratingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string reviewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid userIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string userNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dateofReview {
            get {
                return this.dateofReviewField;
            }
            set {
                if ((this.dateofReviewField.Equals(value) != true)) {
                    this.dateofReviewField = value;
                    this.RaisePropertyChanged("dateofReview");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid itemId {
            get {
                return this.itemIdField;
            }
            set {
                if ((this.itemIdField.Equals(value) != true)) {
                    this.itemIdField = value;
                    this.RaisePropertyChanged("itemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int rating {
            get {
                return this.ratingField;
            }
            set {
                if ((this.ratingField.Equals(value) != true)) {
                    this.ratingField = value;
                    this.RaisePropertyChanged("rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string review {
            get {
                return this.reviewField;
            }
            set {
                if ((object.ReferenceEquals(this.reviewField, value) != true)) {
                    this.reviewField = value;
                    this.RaisePropertyChanged("review");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid userID {
            get {
                return this.userIDField;
            }
            set {
                if ((this.userIDField.Equals(value) != true)) {
                    this.userIDField = value;
                    this.RaisePropertyChanged("userID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                if ((object.ReferenceEquals(this.userNameField, value) != true)) {
                    this.userNameField = value;
                    this.RaisePropertyChanged("userName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference2.IBikeService")]
    public interface IBikeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/GetBikes", ReplyAction="http://tempuri.org/IBikeService/GetBikesResponse")]
        project1.ServiceReference2.Bike[] GetBikes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/GetBikes", ReplyAction="http://tempuri.org/IBikeService/GetBikesResponse")]
        System.Threading.Tasks.Task<project1.ServiceReference2.Bike[]> GetBikesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/GetBike", ReplyAction="http://tempuri.org/IBikeService/GetBikeResponse")]
        project1.ServiceReference2.Bike GetBike(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/GetBike", ReplyAction="http://tempuri.org/IBikeService/GetBikeResponse")]
        System.Threading.Tasks.Task<project1.ServiceReference2.Bike> GetBikeAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/GetParts", ReplyAction="http://tempuri.org/IBikeService/GetPartsResponse")]
        project1.ServiceReference2.Part[] GetParts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/GetParts", ReplyAction="http://tempuri.org/IBikeService/GetPartsResponse")]
        System.Threading.Tasks.Task<project1.ServiceReference2.Part[]> GetPartsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/GetPart", ReplyAction="http://tempuri.org/IBikeService/GetPartResponse")]
        project1.ServiceReference2.Part GetPart(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/GetPart", ReplyAction="http://tempuri.org/IBikeService/GetPartResponse")]
        System.Threading.Tasks.Task<project1.ServiceReference2.Part> GetPartAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/getReviews", ReplyAction="http://tempuri.org/IBikeService/getReviewsResponse")]
        project1.ServiceReference2.ItemsReview[] getReviews(System.Guid itemid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/getReviews", ReplyAction="http://tempuri.org/IBikeService/getReviewsResponse")]
        System.Threading.Tasks.Task<project1.ServiceReference2.ItemsReview[]> getReviewsAsync(System.Guid itemid);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IBikeService/addReviews")]
        void addReviews(project1.ServiceReference2.ItemsReview rev);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IBikeService/addReviews")]
        System.Threading.Tasks.Task addReviewsAsync(project1.ServiceReference2.ItemsReview rev);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBikeServiceChannel : project1.ServiceReference2.IBikeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BikeServiceClient : System.ServiceModel.ClientBase<project1.ServiceReference2.IBikeService>, project1.ServiceReference2.IBikeService {
        
        public BikeServiceClient() {
        }
        
        public BikeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BikeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BikeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BikeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public project1.ServiceReference2.Bike[] GetBikes() {
            return base.Channel.GetBikes();
        }
        
        public System.Threading.Tasks.Task<project1.ServiceReference2.Bike[]> GetBikesAsync() {
            return base.Channel.GetBikesAsync();
        }
        
        public project1.ServiceReference2.Bike GetBike(System.Guid id) {
            return base.Channel.GetBike(id);
        }
        
        public System.Threading.Tasks.Task<project1.ServiceReference2.Bike> GetBikeAsync(System.Guid id) {
            return base.Channel.GetBikeAsync(id);
        }
        
        public project1.ServiceReference2.Part[] GetParts() {
            return base.Channel.GetParts();
        }
        
        public System.Threading.Tasks.Task<project1.ServiceReference2.Part[]> GetPartsAsync() {
            return base.Channel.GetPartsAsync();
        }
        
        public project1.ServiceReference2.Part GetPart(System.Guid id) {
            return base.Channel.GetPart(id);
        }
        
        public System.Threading.Tasks.Task<project1.ServiceReference2.Part> GetPartAsync(System.Guid id) {
            return base.Channel.GetPartAsync(id);
        }
        
        public project1.ServiceReference2.ItemsReview[] getReviews(System.Guid itemid) {
            return base.Channel.getReviews(itemid);
        }
        
        public System.Threading.Tasks.Task<project1.ServiceReference2.ItemsReview[]> getReviewsAsync(System.Guid itemid) {
            return base.Channel.getReviewsAsync(itemid);
        }
        
        public void addReviews(project1.ServiceReference2.ItemsReview rev) {
            base.Channel.addReviews(rev);
        }
        
        public System.Threading.Tasks.Task addReviewsAsync(project1.ServiceReference2.ItemsReview rev) {
            return base.Channel.addReviewsAsync(rev);
        }
    }
}
